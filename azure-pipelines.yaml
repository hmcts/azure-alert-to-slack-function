trigger:
  batch: true
  branches:
    include:
    - main

resources:
  repositories:
  - repository: cnp-azuredevops-libraries
    type: github
    ref: refs/heads/master
    name: hmcts/cnp-azuredevops-libraries
    endpoint: 'hmcts'

parameters:
  - name: overrideAction
    type: string
    default: plan
    values:
    - plan
    - apply
    - destroy

  - name: environment_components
    type: object
    default:
    - deployment: 'cft_sbox'
      environment: 'sbox'
      component: 'infra'
      service_connection: 'DCD-CFTAPPS-SBOX'
      dependsOn: 'Build'
    - deployment: 'cft_demo'
      environment: 'demo'
      component: 'infra'
      service_connection: 'DCD-CFTAPPS-DEMO'
      dependsOn: 'sbox'
    - deployment: 'cft_ithc'
      environment: 'ithc'
      component: 'infra'
      service_connection: 'DCD-CFTAPPS-ITHC'
      dependsOn: 'sbox'
    - deployment: 'cft_stg'
      environment: 'stg'
      component: 'infra'
      service_connection: 'DCD-CFTAPPS-STG'
      dependsOn: 'sbox'
    - deployment: 'cft_test'
      environment: 'test'
      component: 'infra'
      service_connection: 'DCD-CFTAPPS-TEST'
      dependsOn: 'sbox'
    - deployment: 'cft_prod'
      environment: 'prod'
      component: 'infra'
      service_connection: 'DCD-CFTAPPS-PROD'
      dependsOn: 'stg'

    - deployment: 'sds_sbox'
      environment: 'sbox'
      component: 'infra'
      service_connection: 'DTS-SHAREDSERVICES-SBOX'
      dependsOn: 'Build'
    - deployment: 'sds_demo'
      environment: 'demo'
      component: 'infra'
      service_connection: 'DTS-SHAREDSERVICES-DEMO'
      dependsOn: 'sbox'
    - deployment: 'sds_ithc'
      environment: 'ithc'
      component: 'infra'
      service_connection: 'DTS-SHAREDSERVICES-ITHC'
      dependsOn: 'sbox'
    - deployment: 'sds_stg'
      environment: 'stg'
      component: 'infra'
      service_connection: 'DTS-SHAREDSERVICES-STG'
      dependsOn: 'sbox'
    - deployment: 'sds_test'
      environment: 'test'
      component: 'infra'
      service_connection: 'DTS-SHAREDSERVICES-TEST'
      dependsOn: 'sbox'
    - deployment: 'sds_prod'
      environment: 'prod'
      component: 'infra'
      service_connection: 'DTS-SHAREDSERVICES-PROD'
      dependsOn: 'stg'

variables:
  - name: timeoutInMinutes
    value: 60
  - name: agentPool
    value: ubuntu-22.04
  - name: build
    value: $(Build.BuildNumber)
  - name: product
    value: alerts
  - name: terraformInitSubscription
    value: 04d27a32-7a07-48b3-95b8-3c8691e1a263
  - template: vars/input-variables.yaml@cnp-azuredevops-libraries

stages:
  - stage: Precheck
    jobs:
      - job:
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
          - template: steps/terraform-precheck.yaml@cnp-azuredevops-libraries
            parameters:
              keyvaultName: 'infra-vault-nonprod'
              keyvaultSecret: 'azure-devops-sp-token'
              serviceConnection: 'DCD-CFT-Sandbox'
              overrideAction: ${{ parameters.overrideAction }}

  - stage: Build
    dependsOn: Precheck
    jobs:
      - job: BuildArtifacts
        pool:
          vmImage: ${{ variables.agentPool }}
        timeoutInMinutes: ${{ variables.timeoutInMinutes }}
        steps:
        - bash: |
            npm install 
            npm run build --if-present
            npm prune --production
          displayName: Install dependencies
          workingDirectory: $(System.DefaultWorkingDirectory)
        - bash: npm prune --production
          displayName: Prune dependencies
          workingDirectory: $(System.DefaultWorkingDirectory)
        - bash: |
            zip -r $(System.ArtifactsDirectory)/build$(Build.BuildId).zip . --exclude @.funcignore --exclude .funcignore
          displayName: Archive files
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(System.ArtifactsDirectory)/build$(Build.BuildId).zip'
            artifactName: 'alerts-to-slack'

  - ${{ each deployment in parameters.environment_components }}:
    - stage: ${{ deployment.deployment }}
      displayName: "Infra - ${{ deployment.deployment }}"
      dependsOn: ${{ deployment.dependsOn }}
      jobs:
        - job: TerraformPlanApply
          pool:
            vmImage: ${{ variables.agentPool }}
          timeoutInMinutes: ${{ variables.timeoutInMinutes }}
          steps:
          - template: steps/terraform.yaml@cnp-azuredevops-libraries
            parameters:
              overrideAction: ${{ parameters.overrideAction }}
              environment: ${{ deployment.environment }}
              component: ${{ deployment.component }}
              serviceConnection: ${{ deployment.service_connection }}
              terraformInitSubscription: ${{ variables.terraformInitSubscription }}
              product: ${{ variables.product }}
          - task: DownloadPipelineArtifact@2
            displayName: Download artifact
            condition: |
              or(
              and(succeeded(), eq('${{ parameters.overrideAction }}', 'apply')),
              and(succeeded(), eq(variables['isMain'], true), eq(variables['isAutoTriggered'], true))
              )
            inputs:
              buildType: 'current'
              artifactName: 'alerts-to-slack'
          - task: AzureFunctionApp@2
            displayName: Publish to Azure Function
            condition: |
              or(
              and(succeeded(), eq('${{ parameters.overrideAction }}', 'apply')),
              and(succeeded(), eq(variables['isMain'], true), eq(variables['isAutoTriggered'], true))
              )
            inputs:
              azureSubscription: ${{ deployment.service_connection }}
              appType: functionApp
              ${{ if eq( deployment['environment'], 'stg') }}:
                appName: "${{ variables.product }}-slack-aat"
              ${{ else }}:
                appName: "${{ variables.product }}-slack-${{ deployment.environment }}"
              package: $(Pipeline.Workspace)/**/*.zip
              deploymentMethod: 'auto'
